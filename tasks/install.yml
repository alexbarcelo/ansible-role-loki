---
- name: Check {{ target }} binary
  stat:
    path: "{{ loki_install_dir }}/{{ target_version }}/{{ target }}-linux-{{ go_arch }}"
  register: binary

- name: Download {{ target }} binaries
  get_url:
    url: "{{ binary_dist_url }}"
    dest: "{{ loki_tmp_dir }}/{{ target_version }}_{{ target }}-linux-{{ go_arch }}.zip"
    force: True
    checksum: "sha256:{{ target_checksum }}"
  when: not binary.stat.exists

- name: Unpack {{ target }} binaries
  ignore_errors: "{{ ansible_check_mode }}"
  unarchive:
    src: "{{ loki_tmp_dir }}/{{ target_version }}_{{ target }}-linux-{{ go_arch }}.zip"
    dest: "{{ loki_install_dir }}/{{ target_version }}"
    creates: "{{ loki_install_dir }}/{{ target_version }}/{{ target }}-linux-{{ go_arch }}"
    mode: 0755
    remote_src: True

- name: Create symlink to latest {{ target }} version
  notify:
    - Restart {{ target }}
  ignore_errors: "{{ ansible_check_mode }}"
  file:
    state: link
    src: "{{ loki_install_dir }}/{{ target_version }}/{{ target }}-linux-{{ go_arch }}"
    dest: /usr/local/bin/{{ target }}
    mode: 0755

- name: Write {{ target }} configuration file
  notify:
    - Restart {{ target }}
  template:
    src: "{{ target }}-config.j2"
    dest: "{{ loki_config_dir }}/{{ target }}-config.yml"
    owner: root
    group: "{{ loki_system_group }}"
    mode: 0644

- name: Create systemd service unit for {{ target }}
  notify:
    - Restart {{ target }}
  template:
    src: "{{ target }}.service.j2"
    dest: /etc/systemd/system/{{ target }}.service
    mode: 0644
